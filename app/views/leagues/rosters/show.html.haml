- unless @roster.approved?
  .alert.alert-warning
    %span.glyphicon.glyphicon-warning-sign
    Roster is awaiting approval

- if user_can_edit_roster?
  = link_to edit_league_roster_path(@competition, @roster), class: 'btn btn-default pull-right' do
    Edit
    %span.glyphicon.glyphicon-cog

%h1
  = link_to @competition, league_path(@competition)
  - unless @competition.signuppable?
    \: #{@roster.division}

%h2= @roster.name
Team #{link_to @roster.team, team_path(@roster.team)}
signed up on #{@roster.created_at.strftime('%c')}

%p

.panel.panel-default
  .panel-heading Info
  .panel-body= markdown @roster.description

.panel.panel-default
  .panel-heading
    Roster
    - if user_can_edit_roster?
      = link_to league_roster_transfers_path(@competition, @roster),
                class: 'btn btn-default pull-right' do
        Manage
  %ul.list-group
    - present_collection(@roster.player_users).each do |user|
      %li.list-group-item
        = user.listing team: @roster.team

.panel.panel-default
  .panel-heading Transfers
  %ul.list-group
    - @roster.approved_transfers.each do |transfer|
      %li.list-group-item
        - present(transfer.user) do |user|
          = user.listing titles: false
        - if transfer.is_joining?
          joined the team
        - else
          left the team
        on #{transfer.created_at.strftime('%c')}

.panel.panel-default
  .panel-heading Matches
  %ul.list-group
    - present_collection(@roster.matches).each do |match|
      %li.list-group-item= match.link

- if user_can_edit_league? && !@roster.approved?
  .panel.panel-default
    .panel-heading Admin
    .panel-body
      = link_to 'Approve', review_league_roster_path(@competition, @roster),
                           class: 'btn btn-success pull-right'
      = button_to 'Decline', league_roster_path(@competition, @roster),
          method: :delete, class: 'btn btn-danger pull-right',
          data: { confirm: "Are you sure you want to decline this team's sign up?" }
