- content_for(:title) { @user.name }

- user_p = present(@user)

- if user_can_edit_user?
  = link_to edit_user_path(@user), class: 'btn btn-secondary pull-right', type: 'button' do
    Settings
    = inline_svg_tag 'open_iconic/cog.svg', class: 'icon ml-1'

.d-flex.align-items-start.mb-4
  = image_tag @user.avatar.icon.url, class: 'rounded mr-3', width: '100', height: '100'

  .d-flex.flex-column.align-self-stretch.ml-3
    .d-flex.flex-column.justify-content-center.h-100
      .row.align-items-center
        %h2.spaced-letters.mr-2.mb-0
          = @user.name
        = user_p.badge

      - unless @aka.empty?
        .row
          .text-secondary aka #{@aka.map(&:name).join(', ')}

    .row.align-items-center.steam-link.mt-2
      = user_p.steam_icon_link
      %span.mx-1
      = user_p.steam_id_link
      %span.mx-2= '/'
      %span= @user.steam_32
      %span.mx-2= '/'
      %span= @user.steam_id

.row
  != present_collection(@titles).map(&:icon).join(' ')

  .pull-right= render 'users/bans/list', user: @user

- if current_user? && !@team_invites.empty?
  - @team_invites.each do |invite|
    - team = invite.team
    .alert.alert-info
      You have been invited to join #{present(team).link}

      .button-group.pull-right
        = button_to decline_team_invite_path(team),
                    method: :delete, class: 'btn btn-danger' do
          Decline
          %span.glyphicon.glyphicon-remove
      .button-group.pull-right
        = button_to accept_team_invite_path(team),
                    method: :post, class: 'btn btn-success' do
          Accept
          %span.glyphicon.glyphicon-ok

- if user_p.notice != '' && (user_can_edit_users? || (current_user? && current_user == @user))
  .card.mb-3
    .card-header.bg-warning Notice
    .card-body.markdown= user_p.notice

.nav.nav-tabs#tabs{ role: 'tablist' }
  %a.nav-item.nav-link.active#info-tab{ href: '#info', role: 'tab', data: { toggle: 'tab' },
                                        aria: { controls: 'info', selected: 'true' } }
    Info
  - unless @roster_transfers.empty?
    %a.nav-item.nav-link#leagues-tab{ href: '#leagues', role: 'tab', data: { toggle: 'tab' },
                                      aria: { controls: 'leagues', selected: 'false' } }
      Leagues
  %a.nav-item.nav-link#forums-tab{ href: '#forums', role: 'tab', data: { toggle: 'tab' },
                                   aria: { controls: 'forums', selected: 'false' } }
    Forums

.tab-content.mt-3#tab-content
  .tab-pane.show.active#info{ role: 'tabpanel', aria: { kabekkedby: 'info-tab' } }
    = render 'users/show_info', user: @user, user_p: user_p, matches: @matches,
                                teams: @teams, team_transfers: @team_transfers
  - unless @roster_transfers.empty?
    .tab-pane#leagues{ role: 'tabpanel', aria: { kabekkedby: 'leagues-tab' } }
      = render 'users/show_leagues', user: @user, roster_transfers: @roster_transfers
  .tab-pane#forums{ role: 'tabpanel', aria: { kabekkedby: 'forums-tab' } }
    = render 'users/show_forums', user: @user, forums_posts: @forums_posts


- if user_can_edit_users?
  %hr
  = render 'users/show_admin_comments', user: @user, comments: @comments, comment: @comment
