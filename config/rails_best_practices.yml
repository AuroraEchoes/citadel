AddModelVirtualAttributeCheck: { }
AlwaysAddDbIndexCheck: { }
# CheckSaveReturnValueCheck: { } # False positives
# CheckDestroyReturnValueCheck: { } # False positives
DefaultScopeIsEvilCheck: { }
DryBundlerInCapistranoCheck: { }
HashSyntaxCheck: { }
# IsolateSeedDataCheck: { } # False positives in complex migrations
KeepFindersOnTheirOwnModelCheck: { }
LawOfDemeterCheck: { }
# LongLineCheck: { max_line_length: 80 } # Handled by Rubocop
MoveCodeIntoControllerCheck: { }
MoveCodeIntoHelperCheck: { array_count: 3 }
# MoveCodeIntoModelCheck: { use_count: 2 } # False positives when retrieving many associations
MoveFinderToNamedScopeCheck: { }
MoveModelLogicIntoModelCheck: { use_count: 4 }
NeedlessDeepNestingCheck: { nested_count: 3 }
NotRescueExceptionCheck: { }
NotUseDefaultRouteCheck: { }
NotUseTimeAgoInWordsCheck: { }
OveruseRouteCustomizationsCheck: { customize_count: 4 }
ProtectMassAssignmentCheck: { }
RemoveEmptyHelpersCheck: { }
RemoveTabCheck: { }
RemoveTrailingWhitespaceCheck: { }
RemoveUnusedMethodsInControllersCheck: { except_methods: [] }
RemoveUnusedMethodsInHelpersCheck: { except_methods: [] }
# RemoveUnusedMethodsInModelsCheck: { except_methods: [] } # False positives for methods used by gems
ReplaceComplexCreationWithFactoryMethodCheck: { attribute_assignment_count: 2 }
ReplaceInstanceVariableWithLocalVariableCheck: { }
RestrictAutoGeneratedRoutesCheck: { }
SimplifyRenderInControllersCheck: { }
SimplifyRenderInViewsCheck: { }
UseBeforeFilterCheck: { customize_count: 2 }
UseModelAssociationCheck: { }
UseMultipartAlternativeAsContentTypeOfEmailCheck: { }
UseParenthesesInMethodDefCheck: { }
UseObserverCheck: { }
UseQueryAttributeCheck: { }
UseSayWithTimeInMigrationsCheck: { }
UseScopeAccessCheck: { }
UseTurboSprocketsRails3Check: { }
